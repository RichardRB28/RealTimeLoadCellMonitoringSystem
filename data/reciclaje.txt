 .bulb {
                        width: 80px;
                        height: 80px;
                        background-color: #f0f0f0;
                        border-radius: 70%;
                        position: relative;
                        overflow: hidden;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        margin-top: 10px;
                        -webkit-border-radius: 70%;
                        -moz-border-radius: 70%;
                        -ms-border-radius: 70%;
                        -o-border-radius: 70%;
                    }



.light {
                        width: 80px;
                        height: 80px;
                        border-radius: 50%;
                        position: absolute;
                        bottom: -15px;
                        box-shadow: 0 0 15px 5px rgba(204, 196, 191, 0.7);
                        -webkit-border-radius: 50%;
                        -moz-border-radius: 50%;
                        -ms-border-radius: 50%;
                        -o-border-radius: 50%;
                        background-color: #8a958c;
                        border-color: #000000;
                    }
                    /* Para dar efecto de sombra en la bombilla cuando est√° apagada */
                    
                    .bulb::before {
                        content: '';
                        position: absolute;
                        width: 100%;
                        height: 100%;
                        background: radial-gradient(circle at 50% 120%, transparent 0%, rgba(0, 0, 0, 0.4) 60%, rgba(0, 0, 0, 0.6) 100%);
                    }
                    
                     .site-heading {
                        margin-top: 5rem;
                        margin-bottom: 5rem;
                        text-transform: uppercase;
                        line-height: 1;
                        font-family: 'Raleway';
                    }
                    
                    .site-heading .site-heading-upper {
                        display: block;
                        font-size: 2rem;
                        font-weight: 800;
                    }
                    
                    .site-heading .site-heading-lower {
                        font-size: 5rem;
                        font-weight: 100;
                        line-height: 4rem;
                    }
                    
                    .page-section {
                        margin-top: 5rem;
                        margin-bottom: 5rem;
                    }
                    
                    .section-heading {
                        text-transform: uppercase;
                    }
                    
                    .section-heading .section-heading-upper {
                        display: block;
                        font-size: 1rem;
                        font-weight: 800;
                        padding-bottom: .5rem;
                    }
                    
                    .section-heading .section-heading-lower {
                        display: block;
                        font-size: 3rem;
                        font-weight: 100;
                    }
                    
                    .section-heading .section-heading-under {
                        display: block;
                        font-size: 1rem;
                        text-transform: none;
                        font-weight: 300;
                        margin-top: .5rem;
                    }
                    
                    .bg-faded {
                        background-color: rgba(255, 255, 255, 0.85);
                    }
                    
                    #mainNav {
                        background-color: rgba(24, 64, 8);
                        font-family: 'Raleway';
                    }
                    
                    #mainNav .navbar-brand {
                        color: #ffffff;
                    }
                    
                    #mainNav .navbar-nav .nav-item .nav-link {
                        color: rgba(255, 255, 255, 0.7);
                        font-weight: 800;
                    }
                    
                    #mainNav .navbar-nav .nav-item.active .nav-link {
                        color: #ffffff;
                        text-decoration: underline;
                    }
                    
                    @media (min-width: 992px) {
                        #mainNav .navbar-nav .nav-item .nav-link {
                            font-size: 0.9rem;
                        }
                        #mainNav .navbar-nav .nav-item .nav-link:hover {
                            color: rgba(255, 255, 255, 0.4);
                            text-decoration: underline;
                        }
                        #mainNav .navbar-nav .nav-item.active .nav-link:hover {
                            color: #ffffff;
                            text-decoration: underline;
                        }
                    }
                    
                    ul.errorlist {
                        padding-top: .75rem;
                        font-style: italic;
                        color: red;
                    }
                   






-------------------------------------CODIGO WIFI--------------------------------------
#include <WiFi.h>
//#include <WiFiClient.h>
//#include <WiFiAP.h>
#include <WebServer.h>
#include "SPIFFS.h" // libreria para gestion de archivos
#include<HX711_ADC.h>
#include<clase_celda_proto.h>
#define LED_BUILTIN 2   // Set the GPIO pin where you connected your test LED or comment this line out if your dev board has a built-in LED

// Set these to your desired credentials.
const char *ssid = "BASCOSTALTDA";
const char *password = "Bascosta1608Ag";
//IPAddress ip();// ip 
//IPAddress gateway(); gateway
//IPAddress subnet(255,255,255,0);// maskred
WebServer Esp32server(80);// puerto por defecto
String respuesta="<h1> Hola desde Esp32</h1>";
// a la direccion principal
void responderPeticion(){
  Esp32server.send(200,"text/html",respuesta); // responde un html con formato "respuesta" 
}
String indexpageProcesor(const String &var)
{
  String status = "";
  if (var == "calib_state")
  {

    if (celda.calibracion_mth(celda_prueba))
    {
      status = "green";
    }
    else
    {
      status = "red";
    }
  }
  }
void setup() {
  pinMode(LED_BUILTIN, OUTPUT);
  Serial.begin(115200);
  Serial.println();
  Serial.print("Intentado conectar a:  ");
  Serial.println(ssid);
  WiFi.begin(ssid,password);
  while(WiFi.status()!= WL_CONNECTED){
  Serial.println(WiFi.status());
  delay(100);
  Serial.print("");
  }
  Serial.println("");Serial.print("wifi conectado con ip :");Serial.println(WiFi.localIP());

  //initialize SPIFFS
    if (!SPIFFS.begin(true))
    {
        Serial.println("no se ha logrado obtener plantillas estaticas");
        return;
    }
  //para gestionar consultas o peticiones URL
  Esp32server.on("/",responderPeticion);// responde dicha peticion
  Esp32server.begin();
  Serial.println("servidor inicializado");
  delay(500);

}
void loop() {
  Esp32server.handleClient();// gestiona requerimiento o peticiones http
}